package org.datn.bookstation.dto.response;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class BookAuthorStatsResponse {
    private Integer authorId;
    private String authorName;
    private String authorBiography;
    
    // üìö TH·ªêNG K√ä S·∫¢N PH·∫®M
    private Long totalBooks;                    // T·ªïng s·ªë s√°ch c·ªßa t√°c gi·∫£
    private Long activeBooks;                   // S·ªë s√°ch ƒëang b√°n
    private Long totalGenres;                   // S·ªë th·ªÉ lo·∫°i s√°ch vi·∫øt
    
    // üí∞ TH·ªêNG K√ä DOANH THU
    private BigDecimal totalRevenue;            // T·ªïng doanh thu t·ª´ t√°c gi·∫£
    private BigDecimal averageBookPrice;        // Gi√° trung b√¨nh s√°ch t√°c gi·∫£
    private Double revenueContributionPercentage; // T·ª∑ l·ªá ƒë√≥ng g√≥p doanh thu (%)
    
    // üìà TH·ªêNG K√ä B√ÅN H√ÄNG
    private Long totalBooksSold;                // T·ªïng s·ªë s√°ch ƒë√£ b√°n
    private Long totalOrders;                   // T·ªïng ƒë∆°n h√†ng ch·ª©a s√°ch t√°c gi·∫£
    private Double averageSalesPerBook;         // Trung b√¨nh b√°n/cu·ªën
    private Long totalCustomers;                // S·ªë kh√°ch h√†ng mua s√°ch t√°c gi·∫£
    
    // ‚≠ê TH·ªêNG K√ä CH·∫§T L∆Ø·ª¢NG
    private Long totalReviews;                  // T·ªïng s·ªë ƒë√°nh gi√°
    private Double averageRating;               // ƒêi·ªÉm ƒë√°nh gi√° trung b√¨nh
    private Double satisfactionRate;            // T·ª∑ l·ªá h√†i l√≤ng
    private Long fiveStarReviews;               // S·ªë ƒë√°nh gi√° 5 sao
    
    // üî• HI·ªÜU SU·∫§T & X·∫æP H·∫†NG
    private Integer rankAmongAuthors;           // Th·ª© h·∫°ng trong t·∫•t c·∫£ t√°c gi·∫£
    private String popularityLevel;             // BESTSELLER, POPULAR, AVERAGE, NICHE
    private Double growthRate;                  // T·ª∑ l·ªá tƒÉng tr∆∞·ªüng b√°n h√†ng
    
    // üéØ TOP PERFORMERS
    private String bestSellingBookName;         // S√°ch b√°n ch·∫°y nh·∫•t
    private Integer bestSellingBookId;          // ID s√°ch b√°n ch·∫°y nh·∫•t
    private Long bestSellingQuantity;           // S·ªë l∆∞·ª£ng b√°n c·ªßa s√°ch top
    private String highestRatedBookName;        // S√°ch ƒë√°nh gi√° cao nh·∫•t
    private Double highestRatedBookRating;      // ƒêi·ªÉm ƒë√°nh gi√° cao nh·∫•t
    
    // üìä PH√ÇN T√çCH ƒê·∫∂C BI·ªÜT
    private Boolean isTopSellingAuthor;         // C√≥ ph·∫£i t√°c gi·∫£ b√°n ch·∫°y
    private Boolean isRisingAuthor;             // C√≥ ph·∫£i t√°c gi·∫£ ƒëang l√™n
    private Boolean hasConsistentQuality;       // C√≥ ch·∫•t l∆∞·ª£ng ƒë·ªìng ƒë·ªÅu
    private String mostPopularGenre;            // Th·ªÉ lo·∫°i ph·ªï bi·∫øn nh·∫•t
    private String fanbaseProfile;              // H·ªì s∆° ng∆∞·ªùi h√¢m m·ªô
    private String recommendedStrategy;         // Chi·∫øn l∆∞·ª£c khuy·∫øn ngh·ªã
}
