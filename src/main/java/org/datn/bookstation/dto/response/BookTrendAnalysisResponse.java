package org.datn.bookstation.dto.response;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class BookTrendAnalysisResponse {
    private String period;                      // K·ª≥ th·ªëng k√™ (2024-01, 2024-Q1, 2024)
    private String periodType;                  // DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY
    
    // üìä TH·ªêNG K√ä B√ÅN H√ÄNG
    private Long totalBooksSold;                // T·ªïng s·ªë s√°ch b√°n ra
    private Long totalOrders;                   // T·ªïng s·ªë ƒë∆°n h√†ng
    private BigDecimal totalRevenue;            // T·ªïng doanh thu
    private Long uniqueCustomers;               // S·ªë kh√°ch h√†ng duy nh·∫•t
    
    // üìà SO S√ÅNH V·ªöI K·ª≤ TR∆Ø·ªöC
    private Double salesGrowthRate;             // T·ª∑ l·ªá tƒÉng tr∆∞·ªüng b√°n h√†ng (%)
    private Double revenueGrowthRate;           // T·ª∑ l·ªá tƒÉng tr∆∞·ªüng doanh thu (%)
    private Double customerGrowthRate;          // T·ª∑ l·ªá tƒÉng tr∆∞·ªüng kh√°ch h√†ng (%)
    
    // üî• TOP PERFORMERS
    private String topSellingBookName;          // T√™n s√°ch b√°n ch·∫°y nh·∫•t
    private Long topSellingBookId;              // ID s√°ch b√°n ch·∫°y nh·∫•t
    private Long topSellingQuantity;            // S·ªë l∆∞·ª£ng b√°n c·ªßa s√°ch top
    
    // üìö PH√ÇN T√çCH DANH M·ª§C
    private String topCategoryName;             // Danh m·ª•c b√°n ch·∫°y nh·∫•t
    private Long topCategoryId;                 // ID danh m·ª•c b√°n ch·∫°y nh·∫•t
    private Long topCategorySales;              // Doanh s·ªë danh m·ª•c top
    
    // ‚≠ê CH·∫§T L∆Ø·ª¢NG D·ªäCH V·ª§
    private Double averageRating;               // ƒê√°nh gi√° trung b√¨nh
    private Long totalReviews;                  // T·ªïng s·ªë ƒë√°nh gi√°
    private Double satisfactionRate;            // T·ª∑ l·ªá h√†i l√≤ng (4-5 sao)
    
    // üí∞ PH√ÇN T√çCH GIA
    private BigDecimal averageOrderValue;       // Gi√° tr·ªã ƒë∆°n h√†ng trung b√¨nh
    private BigDecimal averageBookPrice;        // Gi√° s√°ch trung b√¨nh
    private BigDecimal totalDiscountGiven;      // T·ªïng gi·∫£m gi√° ƒë√£ √°p d·ª•ng
    
    // üéØ INSIGHTS
    private String trendStatus;                 // GROWING, STABLE, DECLINING
    private String seasonalPattern;             // HIGH_SEASON, LOW_SEASON, NORMAL
    private String marketHealthScore;           // EXCELLENT, GOOD, AVERAGE, POOR
}
